# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python Environment (v3.8)
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
#      - name: Lint with flake8
#        run: |
#          pip install flake8
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=500 --statistics
      - name: Create Binary
        run: |
          pwd
          cd splus
          pwd
          echo hello > splus-mac.tar.gz
#          pyinstaller splus.py
#          tar -C dist -cvf splus-mac.tar  .
#          gzip splus-mac.tar
      - name: Upload Binary
        uses: actions/upload-artifact@v1
        with:
          name: splus-mac
          path: ./splus/splus-mac.tar.gz

  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python Environment (v3.8)
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=500 --statistics
      - name: Create Binary
        run: |
          pyinstaller splus.py
          tar -C dist -cvf splus-mac.tar  .
          gzip splus-mac.tar
      - name: Upload Binary
        uses: actions/upload-artifact@v1
        with:
          name: splus-win
          path: ./splus/splus-win.tar.gz


  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python Environment (v3.8)
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      #      - name: Install dependencies
      #        run: |
      #          python -m pip install --upgrade pip
      #          pip install -r requirements.txt
      #      - name: Lint with flake8
      #        run: |
      #          pip install flake8
      #          # stop the build if there are Python syntax errors or undefined names
      #          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=500 --statistics
      - name: Create Binary
        run: |
          pwd
          cd splus
          pwd
          echo hello > splus-linux.tar.gz
      #          pyinstaller splus.py
      #          tar -C dist -cvf splus-mac.tar  .
      #          gzip splus-mac.tar
      - name: Upload Binary
        uses: actions/upload-artifact@v1
        with:
          name: splus-linux
          path: ./splus/splus-linux.tar.gz




  create-release:
    runs-on: ubuntu-latest
    needs: [build-mac, build-linux, build-win]
    steps:
      - uses: actions/checkout@v2
      - name: Download Mac Binary
        uses: actions/download-artifact@v1
        with:
          name: splus-mac
      - name: Download Win Binary
        uses: actions/download-artifact@v1
        with:
          name: splus-win
      - name: Download Linux Binary
        uses: actions/download-artifact@v1
        with:
          name: splus-linux
      - name: Create New Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Debug
        run: |
          pwd
          ls -lR
      - name: Release Mac Binary
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: splus-mac/splus-mac.tar.gz
          asset_name: splus-mac.tar.gz
          asset_content_type: binary/octet-stream
      - name: Release Win Binary
        id: upload-release-asset-2
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: splus-win/splus-win.tar.gz
          asset_name: splus-win.tar.gz
          asset_content_type: binary/octet-stream
      - name: Release Linux Binary
        id: upload-release-asset-3
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: splus-linux/splus-linux.tar.gz
          asset_name: splus-linux.tar.gz
          asset_content_type: binary/octet-stream
